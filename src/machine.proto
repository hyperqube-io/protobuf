syntax = "proto3";

option go_package = "hyperqube-io/protobuf/agent";

import "network.proto";
import "util.proto";

message MachineDisk {
  string MountTarget = 1;
  string SourceFile = 2;
}

message Machine {
  string id = 1;
  string name = 2;

  enum PowerState {
    UNKNOWN = 0;
    POWERED_ON = 1;
    POWERED_OFF = 2;
    SUSPENDED = 3;
  }
  PowerState powerState = 3;

  repeated MachineDisk disks = 4;
  repeated Network networks = 5;
}

message GetMachineRequest {
  string id = 1;
}

message GetVncPortReply {
  uint32 port = 1;
}

message GetMachinesRequest {
  repeated string ids = 1;
}

message GetMachinesReply {
  repeated Machine machines = 1;
}

message CreateMachineRequest {
  string name = 1;
  uint32 cpuCount = 2;
  uint32 memory = 3;
  string diskPath = 4;
}

message CreateMachineReply {
  string id = 1;
}

message MachineNetworkRequest {
  string machineId = 1;
  string networkId = 2;
}

message StopMachinesRequest {
  repeated string ids = 1;
  bool force = 2;
}

service MachineService {
  rpc GetVncPort    (GetMachineRequest)     returns (GetVncPortReply) {}
  rpc GetMany       (GetMachinesRequest)    returns (GetMachinesReply) {}
  rpc Create        (CreateMachineRequest)  returns (CreateMachineReply) {}
  rpc Delete        (GetMachinesRequest)    returns (ActionReply) {}
  rpc Start         (GetMachinesRequest)    returns (ActionReply) {}
  rpc Stop          (StopMachinesRequest)   returns (ActionReply) {}
  rpc LinkNetwork   (MachineNetworkRequest) returns (ActionReply) {}
  rpc UnlinkNetwork (MachineNetworkRequest) returns (ActionReply) {}
}
