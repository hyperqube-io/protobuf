syntax = "proto3";

option go_package = "hyperqube-io/protobuf/agent";

import "network.proto";
import "util.proto";

message MachineDisk {
  string mountTarget = 1;
  string sourceFile = 2;
  int64 virtualSize = 3;
}

message MachineInterface {
  string networkId = 1;
  string macAddress = 2;
}

message Machine {
  string id = 1;
  string name = 2;

  enum PowerState {
    UNKNOWN = 0;
    POWERED_ON = 1;
    POWERED_OFF = 2;
    SUSPENDED = 3;
  }
  PowerState powerState = 3;

  repeated MachineDisk disks = 4;
  repeated Network networks = 5;

  string xml = 6;

  enum BootType {
    BIOS = 0;
    UEFI = 1;
  }
  BootType bootType = 7;
  uint32 cpus = 8;
  int64 memory = 9;

  repeated MachineInterface interfaces = 10;
}

message GetMachineRequest {
  string id = 1;
}

message GetVncPortReply {
  uint32 port = 1;
}

message GetMachinesRequest {
  repeated string ids = 1;
  repeated string fields = 2;
}

message GetMachinesReply {
  repeated Machine machines = 1;
}

message CreateMachineRequest {
  string name = 1;
  uint32 cpuCount = 2;
  uint32 memory = 3;
  string diskPath = 4;
  string xml = 5;
  Machine.BootType bootType = 6;
  string templateXml = 7;
}


message CreateMachineReply {
  string id = 1;
}

message MachineNetworkRequest {
  string machineId = 1;
  string networkId = 2;
}

message LinkNetworkReply {
  MachineInterface interface = 1;
}

message StopMachinesRequest {
  repeated string ids = 1;
  bool force = 2;
}

message UpdateMachineBootTypeRequest {
  string machineId = 1;
  Machine.BootType bootType = 2;
}

message UpdateMachineCpusRequest {
  string machineId = 1;
  uint32 cpus = 2;
}

message UpdateMachineMemoryRequest {
  string machineId = 1;
  int64 memory = 2;
}

service MachineService {
  rpc GetVncPort     (GetMachineRequest)            returns (GetVncPortReply) {}
  rpc GetMany        (GetMachinesRequest)           returns (GetMachinesReply) {}
  rpc Create         (CreateMachineRequest)         returns (CreateMachineReply) {}
  rpc Delete         (GetMachinesRequest)           returns (ActionReply) {}
  rpc Start          (GetMachinesRequest)           returns (ActionReply) {}
  rpc Stop           (StopMachinesRequest)          returns (ActionReply) {}
  rpc LinkNetwork    (MachineNetworkRequest)        returns (LinkNetworkReply) {}
  rpc UnlinkNetwork  (MachineNetworkRequest)        returns (ActionReply) {}
  rpc UpdateBootType (UpdateMachineBootTypeRequest) returns (ActionReply) {}
  rpc UpdateCpus     (UpdateMachineCpusRequest)     returns (ActionReply) {}
  rpc UpdateMemory   (UpdateMachineMemoryRequest)   returns (ActionReply) {}
}
